//Playa segura 1 ocupado 0 vacio, una zona es segura cuando horizontal o verticalmente 

let barbaridad = Array.from({ length: 5 }, () => Array(5).fill(0));

function contarZonasSeguras(playa) {
    if (!playa || playa.length === 0) return 0;

    let filas = playa.length;
    let columnas = playa[0].length;
    let zonas = 0;

    // Función recursiva para explorar una zona segura
    function explorarZona(fila, columna) {
        // Comprobar si estamos fuera de los límites o en una celda ocupada
        if (fila < 0 || fila >= filas || columna < 0 || columna >= columnas || playa[fila][columna] === 1) {
            return;
        }

        // Marcar la celda como visitada cambiándola a 1
        playa[fila][columna] = 1;

        // Explorar en las cuatro direcciones (arriba, abajo, izquierda, derecha)
        explorarZona(fila - 1, columna); // Arriba
        explorarZona(fila + 1, columna); // Abajo
        explorarZona(fila, columna - 1); // Izquierda
        explorarZona(fila, columna + 1); // Derecha
    }

    // Recorrer toda la matriz
    for (let i = 0; i < filas; i++) {
        for (let j = 0; j < columnas; j++) {
            if (playa[i][j] === 0) { // Encontramos una zona segura nueva
                zonas++;
                explorarZona(i, j); // Iniciar la exploración recursiva
            }
        }
    }

    return zonas;
}

// Ejemplo de prueba
const playa = [
  [1, 0, 0, 1, 1],
  [1, 0, 1, 1, 1],
  [0, 0, 1, 0, 0],
  [1, 1, 1, 0, 1]
];

console.log(contarZonasSeguras(playa)); // Salida: 3